/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/x0AvhGx7QdJ
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { IBM_Plex_Sans } from 'next/font/google'

ibm_plex_sans({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

"use client"; // Mark the component as a Client Component
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Textarea } from "@/components/ui/textarea"
import { useEffect, useState } from "react"; // Add this import
import { auth } from "@/lib/firebaseConfig"; // Import Firebase auth

export default function WorkSpacePage() {
  const [sheetsFiles, setSheetsFiles] = useState<{ id: string; name: string; }[]>([]); // Specify the type for sheetsFiles

  useEffect(() => {
    const fetchSheetsFiles = async () => {
      const user = auth.currentUser; // Get the current user
      if (user) {
        const idToken = await user.getIdToken(); // Get the ID token
        if (idToken) {
          try {
            const response = await fetch('/api/sheets', {
              method: 'GET',
              headers: {
                Authorization: `Bearer ${idToken}`, // Include the ID token in the request
              },
            });

            if (!response.ok) {
              throw new Error('Failed to fetch sheets');
            }

            const data = await response.json();
            setSheetsFiles(data); // Set the fetched files
          } catch (error) {
            console.error('Error fetching sheets:', error);
          }
        } else {
          console.error("No ID token is currently available.");
        }
      } else {
        console.error("No user is currently logged in.");
      }
    };

    fetchSheetsFiles();
  }, []); // Empty dependency array to run once on mount

  return (
    <div className="flex flex-col min-h-[100dvh]">
      <header className="px-4 lg:px-6 h-14 flex items-center">
        <Link href="#" className="flex items-center justify-center" prefetch={false}>
          <MountainIcon className="h-6 w-6" />
          <span className="sr-only">EG Desk</span>
        </Link>
        <nav className="ml-auto flex gap-4 sm:gap-6">
          <Link href="#" className="text-sm font-medium hover:underline underline-offset-4" prefetch={false}>
            Features
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline underline-offset-4" prefetch={false}>
            Pricing
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline underline-offset-4" prefetch={false}>
            About
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline underline-offset-4" prefetch={false}>
            Contact
          </Link>
        </nav>
      </header>
      <main className="flex-1 flex">
        <div className="w-full lg:w-3/4 bg-muted">
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 p-4">
            {sheetsFiles.map((file) => (
              <div key={file.id} className="bg-white rounded-lg shadow-md overflow-hidden relative group cursor-pointer">
                <div className="absolute top-2 left-2 bg-primary text-primary-foreground px-2 py-1 rounded-md text-xs font-medium">
                  {file.name}
                </div>
                <div className="aspect-square flex items-center justify-center">
                  <span className="text-3xl font-bold">{file.name.charAt(0)}</span>
                </div>
              </div>
            ))}
          </div>
        </div>
        <div className="w-full lg:w-1/2 bg-white border-l">
          <div className="p-4">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-lg font-bold">Chat</h2>
              <Button variant="outline" size="icon">
                <XIcon className="h-5 w-5" />
              </Button>
            </div>
            <div className="space-y-4">
              <div className="flex items-start justify-end">
                <div className="bg-muted rounded-lg p-3 max-w-[70%]">
                  <div className="font-medium">You</div>
                  <div className="text-muted-foreground text-sm">Hey, can you help me with this sheet?</div>
                </div>
                <Avatar className="ml-2">
                  <AvatarImage src="/placeholder-user.jpg" alt="Avatar" />
                  <AvatarFallback>JD</AvatarFallback>
                </Avatar>
              </div>
              <div className="flex items-start">
                <Avatar className="mr-2">
                  <AvatarImage src="/placeholder-user.jpg" alt="Avatar" />
                  <AvatarFallback>AI</AvatarFallback>
                </Avatar>
                <div className="text-muted-foreground text-sm">Sure, what do you need help with?</div>
              </div>
            </div>
            <div className="mt-4 flex items-center">
              <Textarea
                placeholder="Type your message..."
                className="w-full rounded-md border-muted focus:border-primary focus:ring-primary min-h-[40px] resize-none"
              />
              <Button className="ml-2">
                <AirplaneIcon className="h-5 w-5" />
              </Button>
            </div>
          </div>
        </div>
      </main>
      <footer className="flex flex-col gap-2 sm:flex-row py-6 w-full shrink-0 items-center px-4 md:px-6 border-t">
        <p className="text-xs text-muted-foreground">&copy; 2024 EG Desk. All rights reserved.</p>
        <nav className="sm:ml-auto flex gap-4 sm:gap-6">
          <Link href="#" className="text-xs hover:underline underline-offset-4" prefetch={false}>
            Terms of Service
          </Link>
          <Link href="#" className="text-xs hover:underline underline-offset-4" prefetch={false}>
            Privacy
          </Link>
        </nav>
      </footer>
    </div>
  );
}

function MountainIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  )
}

function AirplaneIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z" />
    </svg>
  )
}

function XIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
